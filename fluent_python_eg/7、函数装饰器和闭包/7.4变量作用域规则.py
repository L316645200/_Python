# 示例 7-4 一个函数，读取一个局部变量和一个全局变量

# def f1(a):
#     print(a)
#     print(b)
#
# f1(3)
# b未定义

#
# def f1(a):
#     print(a)
#     print(b)
# b = 2
# f1(3)
# 正常

# b = 2
# def f1(a):
#     print(a)
#     print(b)
#     b = 2
# f1(3)
# 局部错误，局部变量“b”在赋值之前被引用

# Python 编译函数的定义体时，它判断 b 是局部变量，因为在 函数中给它赋值了。
# 生成的字节码证实了这种判断，Python 会尝试从本 地环境获取 b。
# 后面调用 f2(3) 时， f2 的定义体会获取并打印局部变 量 a 的值，但是尝试获取局部变量 b 的值时，发现 b 没有绑定值。
# 这不是缺陷，而是设计选择：Python 不要求声明变量，但是假定在函数 定义体中赋值的变量是局部变量。
# 这比 JavaScript 的行为好多了， JavaScript 也不要求声明变量，
# 但是如果忘记把变量声明为局部变量 （使用 var），可能会在不知情的情况下获取全局变量。
# 如果在函数中赋值时想让解释器把 b 当成全局变量，要使用 global 声 明
b = 2
def f1(a):
    global b
    print(a)
    print(b)
    b = 6
f1(3)
print(b)
f1(3)
